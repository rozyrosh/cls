{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP Victus\\\\Desktop\\\\React\\\\077\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport api from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        // Check if token is expired\n        const decoded = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n          localStorage.removeItem('token');\n          setUser(null);\n        } else {\n          // Token is valid, get user data\n          const response = await api.get('/api/auth/me');\n          setUser(response.data.data);\n        }\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('token');\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    console.log('AuthContext login called with:', {\n      email,\n      password: '***'\n    });\n    try {\n      console.log('Making API call to /api/auth/login');\n      const response = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n      console.log('Login API response:', response.data);\n      const {\n        data\n      } = response.data;\n      localStorage.setItem('token', data.token);\n      setUser(data);\n      toast.success('Login successful!');\n      console.log('Login successful, user set:', data);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Login API error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/api/auth/register', userData);\n      const {\n        data\n      } = response.data;\n      localStorage.setItem('token', data.token);\n      setUser(data);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await api.put('/api/auth/profile', profileData);\n      setUser(response.data.data);\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jwtDecode","api","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkAuthStatus","token","localStorage","getItem","decoded","currentTime","Date","now","exp","removeItem","response","get","data","error","console","login","email","password","log","post","setItem","success","_error$response","_error$response2","_error$response2$data","message","register","userData","_error$response3","_error$response3$data","logout","updateProfile","profileData","put","_error$response4","_error$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP Victus/Desktop/React/077/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport api from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        // Check if token is expired\n        const decoded = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        \n        if (decoded.exp < currentTime) {\n          localStorage.removeItem('token');\n          setUser(null);\n        } else {\n          // Token is valid, get user data\n          const response = await api.get('/api/auth/me');\n          setUser(response.data.data);\n        }\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('token');\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    console.log('AuthContext login called with:', { email, password: '***' });\n    try {\n      console.log('Making API call to /api/auth/login');\n      const response = await api.post('/api/auth/login', { email, password });\n      console.log('Login API response:', response.data);\n      const { data } = response.data;\n      \n      localStorage.setItem('token', data.token);\n      setUser(data);\n      \n      toast.success('Login successful!');\n      console.log('Login successful, user set:', data);\n      return { success: true };\n    } catch (error) {\n      console.error('Login API error:', error.response?.data || error);\n      const message = error.response?.data?.message || 'Login failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await api.post('/api/auth/register', userData);\n      const { data } = response.data;\n      \n      localStorage.setItem('token', data.token);\n      setUser(data);\n      \n      toast.success('Registration successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await api.put('/api/auth/profile', profileData);\n      setUser(response.data.data);\n      toast.success('Profile updated successfully');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Profile update failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
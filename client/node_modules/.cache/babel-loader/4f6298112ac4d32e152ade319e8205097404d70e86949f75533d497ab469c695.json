{"ast":null,"code":"import React,{useState,useEffect}from'react';import{FaClock,FaTrash}from'react-icons/fa';import api from'../../services/api';import toast from'react-hot-toast';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TeacherSchedule=()=>{const[availability,setAvailability]=useState([]);const[loading,setLoading]=useState(true);const[saving,setSaving]=useState(false);const[selectedDay,setSelectedDay]=useState('');const[startTime,setStartTime]=useState('');const[endTime,setEndTime]=useState('');const daysOfWeek=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];// Convert day name to number (0-6)\nconst getDayNumber=dayName=>{const dayMap={'Monday':1,'Tuesday':2,'Wednesday':3,'Thursday':4,'Friday':5,'Saturday':6,'Sunday':0};return dayMap[dayName]||0;};useEffect(()=>{fetchAvailability();// Debug authentication\nconst token=localStorage.getItem('token');console.log('Auth token exists:',!!token);if(token){try{const decoded=JSON.parse(atob(token.split('.')[1]));console.log('User role:',decoded.role);console.log('User ID:',decoded.id);}catch(e){console.log('Invalid token format');}}},[]);const fetchAvailability=async()=>{try{const response=await api.get('/api/availability');// Handle the nested data structure from the server\nconst availabilityData=response.data.data||response.data||[];// If the data is grouped by day (object with day numbers as keys), flatten it\nlet flattenedData=[];if(availabilityData&&typeof availabilityData==='object'&&!Array.isArray(availabilityData)){// Data is grouped by day, flatten it\nflattenedData=Object.values(availabilityData).flat();}else if(Array.isArray(availabilityData)){// Data is already an array\nflattenedData=availabilityData;}setAvailability(flattenedData);setLoading(false);}catch(error){toast.error('Failed to load availability');setAvailability([]);setLoading(false);}};const handleAddSlot=async()=>{if(!selectedDay||!startTime||!endTime){toast.error('Please fill in all fields');return;}if(startTime>=endTime){toast.error('End time must be after start time');return;}try{setSaving(true);const slotData={dayOfWeek:getDayNumber(selectedDay),startTime,endTime,isAvailable:true};console.log('Adding slot data:',slotData);await api.post('/api/availability',slotData);toast.success('Time slot added successfully');setSelectedDay('');setStartTime('');setEndTime('');fetchAvailability();}catch(error){var _error$response,_error$response2,_error$response2$data;console.error('Add slot error:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error);toast.error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to add time slot');}finally{setSaving(false);}};const handleDeleteSlot=async slotId=>{if(!window.confirm('Are you sure you want to delete this time slot?')){return;}try{console.log('Attempting to delete slot:',slotId);const response=await api.delete(`/api/availability/${slotId}`);console.log('Delete response:',response.data);toast.success('Time slot deleted successfully');fetchAvailability();}catch(error){var _error$response3,_error$response4,_error$response4$data;console.error('Delete slot error:',((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||error);toast.error(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to delete time slot');}};const handleBulkUpdate=async(day,isAvailable)=>{try{setSaving(true);const dayNumber=getDayNumber(day);const slots=Array.isArray(availability)?availability.filter(slot=>slot.dayOfWeek===dayNumber):[];if(slots.length===0){// Create default slots for the day only if they don't exist\nconst defaultSlots=[{startTime:'09:00',endTime:'12:00'},{startTime:'14:00',endTime:'17:00'},{startTime:'18:00',endTime:'21:00'}];for(const slot of defaultSlots){try{const slotData={dayOfWeek:dayNumber,startTime:slot.startTime,endTime:slot.endTime,isAvailable};console.log('Sending slot data:',slotData);await api.post('/api/availability',slotData);}catch(error){var _error$response5,_error$response5$data;// If slot already exists, just update its availability\nif(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)==='Time slot already exists'){try{// Find the existing slot and update it\nconst existingSlotsResponse=await api.get('/api/availability');const existingSlotsData=existingSlotsResponse.data;// Handle different response structures\nlet allSlots=[];if(existingSlotsData&&typeof existingSlotsData==='object'){if(Array.isArray(existingSlotsData)){allSlots=existingSlotsData;}else if(existingSlotsData.data&&Array.isArray(existingSlotsData.data)){allSlots=existingSlotsData.data;}else if(existingSlotsData.success&&existingSlotsData.data){// If data is grouped by day, flatten it\nif(typeof existingSlotsData.data==='object'&&!Array.isArray(existingSlotsData.data)){allSlots=Object.values(existingSlotsData.data).flat();}else if(Array.isArray(existingSlotsData.data)){allSlots=existingSlotsData.data;}}}// Ensure allSlots is an array\nif(!Array.isArray(allSlots)){console.warn('allSlots is not an array:',allSlots);allSlots=[];}const existingSlot=allSlots.find(s=>s&&s.dayOfWeek===dayNumber&&s.startTime===slot.startTime&&s.endTime===slot.endTime);if(existingSlot&&existingSlot._id){await api.put(`/api/availability/${existingSlot._id}`,{isAvailable});}}catch(fetchError){console.error('Error fetching existing slots:',fetchError);// Continue with the next slot\n}}else{throw error;}}}}else{// Update existing slots\nfor(const slot of slots){if(slot._id){await api.put(`/api/availability/${slot._id}`,{isAvailable});}}}toast.success(`${day} availability updated successfully`);fetchAvailability();}catch(error){var _error$response6,_error$response7,_error$response7$data;console.error('Bulk update error:',((_error$response6=error.response)===null||_error$response6===void 0?void 0:_error$response6.data)||error);toast.error(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Failed to update availability');}finally{setSaving(false);}};const getSlotsForDay=day=>{return Array.isArray(availability)?availability.filter(slot=>slot.dayOfWeek===getDayNumber(day)):[];};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-4 text-gray-600\",children:\"Loading your schedule...\"})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 py-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 mb-2\",children:\"My Schedule\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Manage your availability for students to book classes\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6 mb-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900 mb-4\",children:\"Add Time Slot\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Day of Week\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedDay,onChange:e=>setSelectedDay(e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a day\"}),daysOfWeek.map(day=>/*#__PURE__*/_jsx(\"option\",{value:day,children:day},day))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Start Time\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:startTime,onChange:e=>setStartTime(e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"End Time\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:endTime,onChange:e=>setEndTime(e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-end\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleAddSlot,disabled:saving||!selectedDay||!startTime||!endTime,className:\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\",children:saving?'Adding...':'Add Slot'})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900 mb-4\",children:\"Weekly Schedule\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:daysOfWeek.map(day=>{const daySlots=getSlotsForDay(day);const isAvailable=Array.isArray(daySlots)&&daySlots.some(slot=>slot.isAvailable);return/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 rounded-lg p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:day}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleBulkUpdate(day,true),disabled:saving,className:`px-3 py-1 rounded-md text-sm font-medium transition-colors ${isAvailable?'bg-green-100 text-green-800':'bg-gray-100 text-gray-600 hover:bg-green-100 hover:text-green-800'}`,children:\"Available\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleBulkUpdate(day,false),disabled:saving,className:`px-3 py-1 rounded-md text-sm font-medium transition-colors ${!isAvailable?'bg-red-100 text-red-800':'bg-gray-100 text-gray-600 hover:bg-red-100 hover:text-red-800'}`,children:\"Unavailable\"})]})]}),daySlots.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:daySlots.map(slot=>/*#__PURE__*/_jsxs(\"div\",{className:`flex items-center justify-between p-3 rounded-md ${slot.isAvailable?'bg-green-50 border border-green-200':'bg-red-50 border border-red-200'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(FaClock,{className:\"text-gray-400\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium\",children:[slot.startTime,\" - \",slot.endTime]}),/*#__PURE__*/_jsx(\"span\",{className:`px-2 py-1 rounded-full text-xs font-medium ${slot.isAvailable?'bg-green-100 text-green-800':'bg-red-100 text-red-800'}`,children:slot.isAvailable?'Available':'Unavailable'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteSlot(slot._id),className:\"text-red-600 hover:text-red-800 transition-colors\",children:/*#__PURE__*/_jsx(FaTrash,{className:\"w-4 h-4\"})})]},slot._id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4 text-gray-500\",children:[\"No time slots set for \",day]})]},day);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8 bg-blue-50 rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-blue-900 mb-2\",children:\"Tips for Setting Your Schedule\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-blue-800 space-y-1 text-sm\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Set multiple time slots per day to give students more options\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Consider your timezone and peak study hours\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Keep some buffer time between classes\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Update your availability regularly to reflect your current schedule\"})]})]})]})});};export default TeacherSchedule;","map":{"version":3,"names":["React","useState","useEffect","FaClock","FaTrash","api","toast","jsx","_jsx","jsxs","_jsxs","TeacherSchedule","availability","setAvailability","loading","setLoading","saving","setSaving","selectedDay","setSelectedDay","startTime","setStartTime","endTime","setEndTime","daysOfWeek","getDayNumber","dayName","dayMap","fetchAvailability","token","localStorage","getItem","console","log","decoded","JSON","parse","atob","split","role","id","e","response","get","availabilityData","data","flattenedData","Array","isArray","Object","values","flat","error","handleAddSlot","slotData","dayOfWeek","isAvailable","post","success","_error$response","_error$response2","_error$response2$data","message","handleDeleteSlot","slotId","window","confirm","delete","_error$response3","_error$response4","_error$response4$data","handleBulkUpdate","day","dayNumber","slots","filter","slot","length","defaultSlots","_error$response5","_error$response5$data","existingSlotsResponse","existingSlotsData","allSlots","warn","existingSlot","find","s","_id","put","fetchError","_error$response6","_error$response7","_error$response7$data","getSlotsForDay","className","children","value","onChange","target","map","type","onClick","disabled","daySlots","some"],"sources":["C:/Users/HP Victus/Desktop/React/077/client/src/pages/teacher/TeacherSchedule.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaClock, FaTrash } from 'react-icons/fa';\r\nimport api from '../../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst TeacherSchedule = () => {\r\n  const [availability, setAvailability] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [selectedDay, setSelectedDay] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [endTime, setEndTime] = useState('');\r\n\r\n  const daysOfWeek = [\r\n    'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'\r\n  ];\r\n\r\n  // Convert day name to number (0-6)\r\n  const getDayNumber = (dayName) => {\r\n    const dayMap = {\r\n      'Monday': 1,\r\n      'Tuesday': 2,\r\n      'Wednesday': 3,\r\n      'Thursday': 4,\r\n      'Friday': 5,\r\n      'Saturday': 6,\r\n      'Sunday': 0\r\n    };\r\n    return dayMap[dayName] || 0;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAvailability();\r\n    \r\n    // Debug authentication\r\n    const token = localStorage.getItem('token');\r\n    console.log('Auth token exists:', !!token);\r\n    if (token) {\r\n      try {\r\n        const decoded = JSON.parse(atob(token.split('.')[1]));\r\n        console.log('User role:', decoded.role);\r\n        console.log('User ID:', decoded.id);\r\n      } catch (e) {\r\n        console.log('Invalid token format');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const fetchAvailability = async () => {\r\n    try {\r\n      const response = await api.get('/api/availability');\r\n      // Handle the nested data structure from the server\r\n      const availabilityData = response.data.data || response.data || [];\r\n      \r\n      // If the data is grouped by day (object with day numbers as keys), flatten it\r\n      let flattenedData = [];\r\n      if (availabilityData && typeof availabilityData === 'object' && !Array.isArray(availabilityData)) {\r\n        // Data is grouped by day, flatten it\r\n        flattenedData = Object.values(availabilityData).flat();\r\n      } else if (Array.isArray(availabilityData)) {\r\n        // Data is already an array\r\n        flattenedData = availabilityData;\r\n      }\r\n      \r\n      setAvailability(flattenedData);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast.error('Failed to load availability');\r\n      setAvailability([]);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddSlot = async () => {\r\n    if (!selectedDay || !startTime || !endTime) {\r\n      toast.error('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    if (startTime >= endTime) {\r\n      toast.error('End time must be after start time');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSaving(true);\r\n      const slotData = {\r\n        dayOfWeek: getDayNumber(selectedDay),\r\n        startTime,\r\n        endTime,\r\n        isAvailable: true\r\n      };\r\n      console.log('Adding slot data:', slotData);\r\n      await api.post('/api/availability', slotData);\r\n      \r\n      toast.success('Time slot added successfully');\r\n      setSelectedDay('');\r\n      setStartTime('');\r\n      setEndTime('');\r\n      fetchAvailability();\r\n    } catch (error) {\r\n      console.error('Add slot error:', error.response?.data || error);\r\n      toast.error(error.response?.data?.message || 'Failed to add time slot');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSlot = async (slotId) => {\r\n    if (!window.confirm('Are you sure you want to delete this time slot?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Attempting to delete slot:', slotId);\r\n      const response = await api.delete(`/api/availability/${slotId}`);\r\n      console.log('Delete response:', response.data);\r\n      toast.success('Time slot deleted successfully');\r\n      fetchAvailability();\r\n    } catch (error) {\r\n      console.error('Delete slot error:', error.response?.data || error);\r\n      toast.error(error.response?.data?.message || 'Failed to delete time slot');\r\n    }\r\n  };\r\n\r\n  const handleBulkUpdate = async (day, isAvailable) => {\r\n    try {\r\n      setSaving(true);\r\n      const dayNumber = getDayNumber(day);\r\n      const slots = Array.isArray(availability) ? availability.filter(slot => slot.dayOfWeek === dayNumber) : [];\r\n      \r\n      if (slots.length === 0) {\r\n        // Create default slots for the day only if they don't exist\r\n        const defaultSlots = [\r\n          { startTime: '09:00', endTime: '12:00' },\r\n          { startTime: '14:00', endTime: '17:00' },\r\n          { startTime: '18:00', endTime: '21:00' }\r\n        ];\r\n\r\n        for (const slot of defaultSlots) {\r\n          try {\r\n            const slotData = {\r\n              dayOfWeek: dayNumber,\r\n              startTime: slot.startTime,\r\n              endTime: slot.endTime,\r\n              isAvailable\r\n            };\r\n            console.log('Sending slot data:', slotData);\r\n            await api.post('/api/availability', slotData);\r\n          } catch (error) {\r\n            // If slot already exists, just update its availability\r\n            if (error.response?.data?.message === 'Time slot already exists') {\r\n              try {\r\n                // Find the existing slot and update it\r\n                const existingSlotsResponse = await api.get('/api/availability');\r\n                const existingSlotsData = existingSlotsResponse.data;\r\n                \r\n                // Handle different response structures\r\n                let allSlots = [];\r\n                if (existingSlotsData && typeof existingSlotsData === 'object') {\r\n                  if (Array.isArray(existingSlotsData)) {\r\n                    allSlots = existingSlotsData;\r\n                  } else if (existingSlotsData.data && Array.isArray(existingSlotsData.data)) {\r\n                    allSlots = existingSlotsData.data;\r\n                  } else if (existingSlotsData.success && existingSlotsData.data) {\r\n                    // If data is grouped by day, flatten it\r\n                    if (typeof existingSlotsData.data === 'object' && !Array.isArray(existingSlotsData.data)) {\r\n                      allSlots = Object.values(existingSlotsData.data).flat();\r\n                    } else if (Array.isArray(existingSlotsData.data)) {\r\n                      allSlots = existingSlotsData.data;\r\n                    }\r\n                  }\r\n                }\r\n                \r\n                // Ensure allSlots is an array\r\n                if (!Array.isArray(allSlots)) {\r\n                  console.warn('allSlots is not an array:', allSlots);\r\n                  allSlots = [];\r\n                }\r\n                \r\n                const existingSlot = allSlots.find(s => \r\n                  s && s.dayOfWeek === dayNumber && \r\n                  s.startTime === slot.startTime && \r\n                  s.endTime === slot.endTime\r\n                );\r\n                \r\n                if (existingSlot && existingSlot._id) {\r\n                  await api.put(`/api/availability/${existingSlot._id}`, {\r\n                    isAvailable\r\n                  });\r\n                }\r\n              } catch (fetchError) {\r\n                console.error('Error fetching existing slots:', fetchError);\r\n                // Continue with the next slot\r\n              }\r\n            } else {\r\n              throw error;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // Update existing slots\r\n        for (const slot of slots) {\r\n          if (slot._id) {\r\n            await api.put(`/api/availability/${slot._id}`, {\r\n              isAvailable\r\n            });\r\n          }\r\n        }\r\n      }\r\n      \r\n      toast.success(`${day} availability updated successfully`);\r\n      fetchAvailability();\r\n    } catch (error) {\r\n      console.error('Bulk update error:', error.response?.data || error);\r\n      toast.error(error.response?.data?.message || 'Failed to update availability');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const getSlotsForDay = (day) => {\r\n    return Array.isArray(availability) ? availability.filter(slot => slot.dayOfWeek === getDayNumber(day)) : [];\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading your schedule...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">My Schedule</h1>\r\n          <p className=\"text-gray-600\">Manage your availability for students to book classes</p>\r\n        </div>\r\n\r\n        {/* Add New Time Slot */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Add Time Slot</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Day of Week\r\n              </label>\r\n              <select\r\n                value={selectedDay}\r\n                onChange={(e) => setSelectedDay(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"\">Select a day</option>\r\n                {daysOfWeek.map((day) => (\r\n                  <option key={day} value={day}>{day}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Start Time\r\n              </label>\r\n              <input\r\n                type=\"time\"\r\n                value={startTime}\r\n                onChange={(e) => setStartTime(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                End Time\r\n              </label>\r\n              <input\r\n                type=\"time\"\r\n                value={endTime}\r\n                onChange={(e) => setEndTime(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"flex items-end\">\r\n              <button\r\n                onClick={handleAddSlot}\r\n                disabled={saving || !selectedDay || !startTime || !endTime}\r\n                className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                {saving ? 'Adding...' : 'Add Slot'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Weekly Schedule */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Weekly Schedule</h2>\r\n          <div className=\"space-y-6\">\r\n            {daysOfWeek.map((day) => {\r\n              const daySlots = getSlotsForDay(day);\r\n              const isAvailable = Array.isArray(daySlots) && daySlots.some(slot => slot.isAvailable);\r\n              \r\n              return (\r\n                <div key={day} className=\"border border-gray-200 rounded-lg p-4\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h3 className=\"text-lg font-medium text-gray-900\">{day}</h3>\r\n                    <div className=\"flex space-x-2\">\r\n                      <button\r\n                        onClick={() => handleBulkUpdate(day, true)}\r\n                        disabled={saving}\r\n                        className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${\r\n                          isAvailable \r\n                            ? 'bg-green-100 text-green-800' \r\n                            : 'bg-gray-100 text-gray-600 hover:bg-green-100 hover:text-green-800'\r\n                        }`}\r\n                      >\r\n                        Available\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleBulkUpdate(day, false)}\r\n                        disabled={saving}\r\n                        className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${\r\n                          !isAvailable \r\n                            ? 'bg-red-100 text-red-800' \r\n                            : 'bg-gray-100 text-gray-600 hover:bg-red-100 hover:text-red-800'\r\n                        }`}\r\n                      >\r\n                        Unavailable\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {daySlots.length > 0 ? (\r\n                    <div className=\"space-y-2\">\r\n                      {daySlots.map((slot) => (\r\n                        <div\r\n                          key={slot._id}\r\n                          className={`flex items-center justify-between p-3 rounded-md ${\r\n                            slot.isAvailable ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'\r\n                          }`}\r\n                        >\r\n                          <div className=\"flex items-center space-x-4\">\r\n                            <FaClock className=\"text-gray-400\" />\r\n                            <span className=\"text-sm font-medium\">\r\n                              {slot.startTime} - {slot.endTime}\r\n                            </span>\r\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                              slot.isAvailable \r\n                                ? 'bg-green-100 text-green-800' \r\n                                : 'bg-red-100 text-red-800'\r\n                            }`}>\r\n                              {slot.isAvailable ? 'Available' : 'Unavailable'}\r\n                            </span>\r\n                          </div>\r\n                          \r\n                          <button\r\n                            onClick={() => handleDeleteSlot(slot._id)}\r\n                            className=\"text-red-600 hover:text-red-800 transition-colors\"\r\n                          >\r\n                            <FaTrash className=\"w-4 h-4\" />\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center py-4 text-gray-500\">\r\n                      No time slots set for {day}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tips */}\r\n        <div className=\"mt-8 bg-blue-50 rounded-lg p-6\">\r\n          <h3 className=\"text-lg font-semibold text-blue-900 mb-2\">Tips for Setting Your Schedule</h3>\r\n          <ul className=\"text-blue-800 space-y-1 text-sm\">\r\n            <li>• Set multiple time slots per day to give students more options</li>\r\n            <li>• Consider your timezone and peak study hours</li>\r\n            <li>• Keep some buffer time between classes</li>\r\n            <li>• Update your availability regularly to reflect your current schedule</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherSchedule; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,OAAO,CAAEC,OAAO,KAAQ,gBAAgB,CACjD,MAAO,CAAAC,GAAG,KAAM,oBAAoB,CACpC,MAAO,CAAAC,KAAK,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpC,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACe,MAAM,CAAEC,SAAS,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAACiB,WAAW,CAAEC,cAAc,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACmB,SAAS,CAAEC,YAAY,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACqB,OAAO,CAAEC,UAAU,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAuB,UAAU,CAAG,CACjB,QAAQ,CAAE,SAAS,CAAE,WAAW,CAAE,UAAU,CAAE,QAAQ,CAAE,UAAU,CAAE,QAAQ,CAC7E,CAED;AACA,KAAM,CAAAC,YAAY,CAAIC,OAAO,EAAK,CAChC,KAAM,CAAAC,MAAM,CAAG,CACb,QAAQ,CAAE,CAAC,CACX,SAAS,CAAE,CAAC,CACZ,WAAW,CAAE,CAAC,CACd,UAAU,CAAE,CAAC,CACb,QAAQ,CAAE,CAAC,CACX,UAAU,CAAE,CAAC,CACb,QAAQ,CAAE,CACZ,CAAC,CACD,MAAO,CAAAA,MAAM,CAACD,OAAO,CAAC,EAAI,CAAC,CAC7B,CAAC,CAEDxB,SAAS,CAAC,IAAM,CACd0B,iBAAiB,CAAC,CAAC,CAEnB;AACA,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3CC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAE,CAAC,CAACJ,KAAK,CAAC,CAC1C,GAAIA,KAAK,CAAE,CACT,GAAI,CACF,KAAM,CAAAK,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACR,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrDN,OAAO,CAACC,GAAG,CAAC,YAAY,CAAEC,OAAO,CAACK,IAAI,CAAC,CACvCP,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEC,OAAO,CAACM,EAAE,CAAC,CACrC,CAAE,MAAOC,CAAC,CAAE,CACVT,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACrC,CACF,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAL,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACF,KAAM,CAAAc,QAAQ,CAAG,KAAM,CAAArC,GAAG,CAACsC,GAAG,CAAC,mBAAmB,CAAC,CACnD;AACA,KAAM,CAAAC,gBAAgB,CAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI,EAAIH,QAAQ,CAACG,IAAI,EAAI,EAAE,CAElE;AACA,GAAI,CAAAC,aAAa,CAAG,EAAE,CACtB,GAAIF,gBAAgB,EAAI,MAAO,CAAAA,gBAAgB,GAAK,QAAQ,EAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,gBAAgB,CAAC,CAAE,CAChG;AACAE,aAAa,CAAGG,MAAM,CAACC,MAAM,CAACN,gBAAgB,CAAC,CAACO,IAAI,CAAC,CAAC,CACxD,CAAC,IAAM,IAAIJ,KAAK,CAACC,OAAO,CAACJ,gBAAgB,CAAC,CAAE,CAC1C;AACAE,aAAa,CAAGF,gBAAgB,CAClC,CAEA/B,eAAe,CAACiC,aAAa,CAAC,CAC9B/B,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOqC,KAAK,CAAE,CACd9C,KAAK,CAAC8C,KAAK,CAAC,6BAA6B,CAAC,CAC1CvC,eAAe,CAAC,EAAE,CAAC,CACnBE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAsC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAACnC,WAAW,EAAI,CAACE,SAAS,EAAI,CAACE,OAAO,CAAE,CAC1ChB,KAAK,CAAC8C,KAAK,CAAC,2BAA2B,CAAC,CACxC,OACF,CAEA,GAAIhC,SAAS,EAAIE,OAAO,CAAE,CACxBhB,KAAK,CAAC8C,KAAK,CAAC,mCAAmC,CAAC,CAChD,OACF,CAEA,GAAI,CACFnC,SAAS,CAAC,IAAI,CAAC,CACf,KAAM,CAAAqC,QAAQ,CAAG,CACfC,SAAS,CAAE9B,YAAY,CAACP,WAAW,CAAC,CACpCE,SAAS,CACTE,OAAO,CACPkC,WAAW,CAAE,IACf,CAAC,CACDxB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEqB,QAAQ,CAAC,CAC1C,KAAM,CAAAjD,GAAG,CAACoD,IAAI,CAAC,mBAAmB,CAAEH,QAAQ,CAAC,CAE7ChD,KAAK,CAACoD,OAAO,CAAC,8BAA8B,CAAC,CAC7CvC,cAAc,CAAC,EAAE,CAAC,CAClBE,YAAY,CAAC,EAAE,CAAC,CAChBE,UAAU,CAAC,EAAE,CAAC,CACdK,iBAAiB,CAAC,CAAC,CACrB,CAAE,MAAOwB,KAAK,CAAE,KAAAO,eAAA,CAAAC,gBAAA,CAAAC,qBAAA,CACd7B,OAAO,CAACoB,KAAK,CAAC,iBAAiB,CAAE,EAAAO,eAAA,CAAAP,KAAK,CAACV,QAAQ,UAAAiB,eAAA,iBAAdA,eAAA,CAAgBd,IAAI,GAAIO,KAAK,CAAC,CAC/D9C,KAAK,CAAC8C,KAAK,CAAC,EAAAQ,gBAAA,CAAAR,KAAK,CAACV,QAAQ,UAAAkB,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBf,IAAI,UAAAgB,qBAAA,iBAApBA,qBAAA,CAAsBC,OAAO,GAAI,yBAAyB,CAAC,CACzE,CAAC,OAAS,CACR7C,SAAS,CAAC,KAAK,CAAC,CAClB,CACF,CAAC,CAED,KAAM,CAAA8C,gBAAgB,CAAG,KAAO,CAAAC,MAAM,EAAK,CACzC,GAAI,CAACC,MAAM,CAACC,OAAO,CAAC,iDAAiD,CAAC,CAAE,CACtE,OACF,CAEA,GAAI,CACFlC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAE+B,MAAM,CAAC,CACjD,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAArC,GAAG,CAAC8D,MAAM,CAAC,qBAAqBH,MAAM,EAAE,CAAC,CAChEhC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAES,QAAQ,CAACG,IAAI,CAAC,CAC9CvC,KAAK,CAACoD,OAAO,CAAC,gCAAgC,CAAC,CAC/C9B,iBAAiB,CAAC,CAAC,CACrB,CAAE,MAAOwB,KAAK,CAAE,KAAAgB,gBAAA,CAAAC,gBAAA,CAAAC,qBAAA,CACdtC,OAAO,CAACoB,KAAK,CAAC,oBAAoB,CAAE,EAAAgB,gBAAA,CAAAhB,KAAK,CAACV,QAAQ,UAAA0B,gBAAA,iBAAdA,gBAAA,CAAgBvB,IAAI,GAAIO,KAAK,CAAC,CAClE9C,KAAK,CAAC8C,KAAK,CAAC,EAAAiB,gBAAA,CAAAjB,KAAK,CAACV,QAAQ,UAAA2B,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBxB,IAAI,UAAAyB,qBAAA,iBAApBA,qBAAA,CAAsBR,OAAO,GAAI,4BAA4B,CAAC,CAC5E,CACF,CAAC,CAED,KAAM,CAAAS,gBAAgB,CAAG,KAAAA,CAAOC,GAAG,CAAEhB,WAAW,GAAK,CACnD,GAAI,CACFvC,SAAS,CAAC,IAAI,CAAC,CACf,KAAM,CAAAwD,SAAS,CAAGhD,YAAY,CAAC+C,GAAG,CAAC,CACnC,KAAM,CAAAE,KAAK,CAAG3B,KAAK,CAACC,OAAO,CAACpC,YAAY,CAAC,CAAGA,YAAY,CAAC+D,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACrB,SAAS,GAAKkB,SAAS,CAAC,CAAG,EAAE,CAE1G,GAAIC,KAAK,CAACG,MAAM,GAAK,CAAC,CAAE,CACtB;AACA,KAAM,CAAAC,YAAY,CAAG,CACnB,CAAE1D,SAAS,CAAE,OAAO,CAAEE,OAAO,CAAE,OAAQ,CAAC,CACxC,CAAEF,SAAS,CAAE,OAAO,CAAEE,OAAO,CAAE,OAAQ,CAAC,CACxC,CAAEF,SAAS,CAAE,OAAO,CAAEE,OAAO,CAAE,OAAQ,CAAC,CACzC,CAED,IAAK,KAAM,CAAAsD,IAAI,GAAI,CAAAE,YAAY,CAAE,CAC/B,GAAI,CACF,KAAM,CAAAxB,QAAQ,CAAG,CACfC,SAAS,CAAEkB,SAAS,CACpBrD,SAAS,CAAEwD,IAAI,CAACxD,SAAS,CACzBE,OAAO,CAAEsD,IAAI,CAACtD,OAAO,CACrBkC,WACF,CAAC,CACDxB,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEqB,QAAQ,CAAC,CAC3C,KAAM,CAAAjD,GAAG,CAACoD,IAAI,CAAC,mBAAmB,CAAEH,QAAQ,CAAC,CAC/C,CAAE,MAAOF,KAAK,CAAE,KAAA2B,gBAAA,CAAAC,qBAAA,CACd;AACA,GAAI,EAAAD,gBAAA,CAAA3B,KAAK,CAACV,QAAQ,UAAAqC,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBlC,IAAI,UAAAmC,qBAAA,iBAApBA,qBAAA,CAAsBlB,OAAO,IAAK,0BAA0B,CAAE,CAChE,GAAI,CACF;AACA,KAAM,CAAAmB,qBAAqB,CAAG,KAAM,CAAA5E,GAAG,CAACsC,GAAG,CAAC,mBAAmB,CAAC,CAChE,KAAM,CAAAuC,iBAAiB,CAAGD,qBAAqB,CAACpC,IAAI,CAEpD;AACA,GAAI,CAAAsC,QAAQ,CAAG,EAAE,CACjB,GAAID,iBAAiB,EAAI,MAAO,CAAAA,iBAAiB,GAAK,QAAQ,CAAE,CAC9D,GAAInC,KAAK,CAACC,OAAO,CAACkC,iBAAiB,CAAC,CAAE,CACpCC,QAAQ,CAAGD,iBAAiB,CAC9B,CAAC,IAAM,IAAIA,iBAAiB,CAACrC,IAAI,EAAIE,KAAK,CAACC,OAAO,CAACkC,iBAAiB,CAACrC,IAAI,CAAC,CAAE,CAC1EsC,QAAQ,CAAGD,iBAAiB,CAACrC,IAAI,CACnC,CAAC,IAAM,IAAIqC,iBAAiB,CAACxB,OAAO,EAAIwB,iBAAiB,CAACrC,IAAI,CAAE,CAC9D;AACA,GAAI,MAAO,CAAAqC,iBAAiB,CAACrC,IAAI,GAAK,QAAQ,EAAI,CAACE,KAAK,CAACC,OAAO,CAACkC,iBAAiB,CAACrC,IAAI,CAAC,CAAE,CACxFsC,QAAQ,CAAGlC,MAAM,CAACC,MAAM,CAACgC,iBAAiB,CAACrC,IAAI,CAAC,CAACM,IAAI,CAAC,CAAC,CACzD,CAAC,IAAM,IAAIJ,KAAK,CAACC,OAAO,CAACkC,iBAAiB,CAACrC,IAAI,CAAC,CAAE,CAChDsC,QAAQ,CAAGD,iBAAiB,CAACrC,IAAI,CACnC,CACF,CACF,CAEA;AACA,GAAI,CAACE,KAAK,CAACC,OAAO,CAACmC,QAAQ,CAAC,CAAE,CAC5BnD,OAAO,CAACoD,IAAI,CAAC,2BAA2B,CAAED,QAAQ,CAAC,CACnDA,QAAQ,CAAG,EAAE,CACf,CAEA,KAAM,CAAAE,YAAY,CAAGF,QAAQ,CAACG,IAAI,CAACC,CAAC,EAClCA,CAAC,EAAIA,CAAC,CAAChC,SAAS,GAAKkB,SAAS,EAC9Bc,CAAC,CAACnE,SAAS,GAAKwD,IAAI,CAACxD,SAAS,EAC9BmE,CAAC,CAACjE,OAAO,GAAKsD,IAAI,CAACtD,OACrB,CAAC,CAED,GAAI+D,YAAY,EAAIA,YAAY,CAACG,GAAG,CAAE,CACpC,KAAM,CAAAnF,GAAG,CAACoF,GAAG,CAAC,qBAAqBJ,YAAY,CAACG,GAAG,EAAE,CAAE,CACrDhC,WACF,CAAC,CAAC,CACJ,CACF,CAAE,MAAOkC,UAAU,CAAE,CACnB1D,OAAO,CAACoB,KAAK,CAAC,gCAAgC,CAAEsC,UAAU,CAAC,CAC3D;AACF,CACF,CAAC,IAAM,CACL,KAAM,CAAAtC,KAAK,CACb,CACF,CACF,CACF,CAAC,IAAM,CACL;AACA,IAAK,KAAM,CAAAwB,IAAI,GAAI,CAAAF,KAAK,CAAE,CACxB,GAAIE,IAAI,CAACY,GAAG,CAAE,CACZ,KAAM,CAAAnF,GAAG,CAACoF,GAAG,CAAC,qBAAqBb,IAAI,CAACY,GAAG,EAAE,CAAE,CAC7ChC,WACF,CAAC,CAAC,CACJ,CACF,CACF,CAEAlD,KAAK,CAACoD,OAAO,CAAC,GAAGc,GAAG,oCAAoC,CAAC,CACzD5C,iBAAiB,CAAC,CAAC,CACrB,CAAE,MAAOwB,KAAK,CAAE,KAAAuC,gBAAA,CAAAC,gBAAA,CAAAC,qBAAA,CACd7D,OAAO,CAACoB,KAAK,CAAC,oBAAoB,CAAE,EAAAuC,gBAAA,CAAAvC,KAAK,CAACV,QAAQ,UAAAiD,gBAAA,iBAAdA,gBAAA,CAAgB9C,IAAI,GAAIO,KAAK,CAAC,CAClE9C,KAAK,CAAC8C,KAAK,CAAC,EAAAwC,gBAAA,CAAAxC,KAAK,CAACV,QAAQ,UAAAkD,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgB/C,IAAI,UAAAgD,qBAAA,iBAApBA,qBAAA,CAAsB/B,OAAO,GAAI,+BAA+B,CAAC,CAC/E,CAAC,OAAS,CACR7C,SAAS,CAAC,KAAK,CAAC,CAClB,CACF,CAAC,CAED,KAAM,CAAA6E,cAAc,CAAItB,GAAG,EAAK,CAC9B,MAAO,CAAAzB,KAAK,CAACC,OAAO,CAACpC,YAAY,CAAC,CAAGA,YAAY,CAAC+D,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACrB,SAAS,GAAK9B,YAAY,CAAC+C,GAAG,CAAC,CAAC,CAAG,EAAE,CAC7G,CAAC,CAED,GAAI1D,OAAO,CAAE,CACX,mBACEN,IAAA,QAAKuF,SAAS,CAAC,0DAA0D,CAAAC,QAAA,cACvEtF,KAAA,QAAKqF,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BxF,IAAA,QAAKuF,SAAS,CAAC,wEAAwE,CAAM,CAAC,cAC9FvF,IAAA,MAAGuF,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,0BAAwB,CAAG,CAAC,EAC3D,CAAC,CACH,CAAC,CAEV,CAEA,mBACExF,IAAA,QAAKuF,SAAS,CAAC,8BAA8B,CAAAC,QAAA,cAC3CtF,KAAA,QAAKqF,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eAErDtF,KAAA,QAAKqF,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBxF,IAAA,OAAIuF,SAAS,CAAC,uCAAuC,CAAAC,QAAA,CAAC,aAAW,CAAI,CAAC,cACtExF,IAAA,MAAGuF,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,uDAAqD,CAAG,CAAC,EACnF,CAAC,cAGNtF,KAAA,QAAKqF,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDxF,IAAA,OAAIuF,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAC,eAAa,CAAI,CAAC,cAC3EtF,KAAA,QAAKqF,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eACpDtF,KAAA,QAAAsF,QAAA,eACExF,IAAA,UAAOuF,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,aAEhE,CAAO,CAAC,cACRtF,KAAA,WACEuF,KAAK,CAAE/E,WAAY,CACnBgF,QAAQ,CAAGzD,CAAC,EAAKtB,cAAc,CAACsB,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE,CAChDF,SAAS,CAAC,wGAAwG,CAAAC,QAAA,eAElHxF,IAAA,WAAQyF,KAAK,CAAC,EAAE,CAAAD,QAAA,CAAC,cAAY,CAAQ,CAAC,CACrCxE,UAAU,CAAC4E,GAAG,CAAE5B,GAAG,eAClBhE,IAAA,WAAkByF,KAAK,CAAEzB,GAAI,CAAAwB,QAAA,CAAExB,GAAG,EAArBA,GAA8B,CAC5C,CAAC,EACI,CAAC,EACN,CAAC,cAEN9D,KAAA,QAAAsF,QAAA,eACExF,IAAA,UAAOuF,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,YAEhE,CAAO,CAAC,cACRxF,IAAA,UACE6F,IAAI,CAAC,MAAM,CACXJ,KAAK,CAAE7E,SAAU,CACjB8E,QAAQ,CAAGzD,CAAC,EAAKpB,YAAY,CAACoB,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE,CAC9CF,SAAS,CAAC,wGAAwG,CACnH,CAAC,EACC,CAAC,cAENrF,KAAA,QAAAsF,QAAA,eACExF,IAAA,UAAOuF,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,UAEhE,CAAO,CAAC,cACRxF,IAAA,UACE6F,IAAI,CAAC,MAAM,CACXJ,KAAK,CAAE3E,OAAQ,CACf4E,QAAQ,CAAGzD,CAAC,EAAKlB,UAAU,CAACkB,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE,CAC5CF,SAAS,CAAC,wGAAwG,CACnH,CAAC,EACC,CAAC,cAENvF,IAAA,QAAKuF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7BxF,IAAA,WACE8F,OAAO,CAAEjD,aAAc,CACvBkD,QAAQ,CAAEvF,MAAM,EAAI,CAACE,WAAW,EAAI,CAACE,SAAS,EAAI,CAACE,OAAQ,CAC3DyE,SAAS,CAAC,yIAAyI,CAAAC,QAAA,CAElJhF,MAAM,CAAG,WAAW,CAAG,UAAU,CAC5B,CAAC,CACN,CAAC,EACH,CAAC,EACH,CAAC,cAGNN,KAAA,QAAKqF,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAChDxF,IAAA,OAAIuF,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAC,iBAAe,CAAI,CAAC,cAC7ExF,IAAA,QAAKuF,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBxE,UAAU,CAAC4E,GAAG,CAAE5B,GAAG,EAAK,CACvB,KAAM,CAAAgC,QAAQ,CAAGV,cAAc,CAACtB,GAAG,CAAC,CACpC,KAAM,CAAAhB,WAAW,CAAGT,KAAK,CAACC,OAAO,CAACwD,QAAQ,CAAC,EAAIA,QAAQ,CAACC,IAAI,CAAC7B,IAAI,EAAIA,IAAI,CAACpB,WAAW,CAAC,CAEtF,mBACE9C,KAAA,QAAeqF,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eAC9DtF,KAAA,QAAKqF,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDxF,IAAA,OAAIuF,SAAS,CAAC,mCAAmC,CAAAC,QAAA,CAAExB,GAAG,CAAK,CAAC,cAC5D9D,KAAA,QAAKqF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BxF,IAAA,WACE8F,OAAO,CAAEA,CAAA,GAAM/B,gBAAgB,CAACC,GAAG,CAAE,IAAI,CAAE,CAC3C+B,QAAQ,CAAEvF,MAAO,CACjB+E,SAAS,CAAE,8DACTvC,WAAW,CACP,6BAA6B,CAC7B,mEAAmE,EACtE,CAAAwC,QAAA,CACJ,WAED,CAAQ,CAAC,cACTxF,IAAA,WACE8F,OAAO,CAAEA,CAAA,GAAM/B,gBAAgB,CAACC,GAAG,CAAE,KAAK,CAAE,CAC5C+B,QAAQ,CAAEvF,MAAO,CACjB+E,SAAS,CAAE,8DACT,CAACvC,WAAW,CACR,yBAAyB,CACzB,+DAA+D,EAClE,CAAAwC,QAAA,CACJ,aAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CAELQ,QAAQ,CAAC3B,MAAM,CAAG,CAAC,cAClBrE,IAAA,QAAKuF,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBQ,QAAQ,CAACJ,GAAG,CAAExB,IAAI,eACjBlE,KAAA,QAEEqF,SAAS,CAAE,oDACTnB,IAAI,CAACpB,WAAW,CAAG,qCAAqC,CAAG,iCAAiC,EAC3F,CAAAwC,QAAA,eAEHtF,KAAA,QAAKqF,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eAC1CxF,IAAA,CAACL,OAAO,EAAC4F,SAAS,CAAC,eAAe,CAAE,CAAC,cACrCrF,KAAA,SAAMqF,SAAS,CAAC,qBAAqB,CAAAC,QAAA,EAClCpB,IAAI,CAACxD,SAAS,CAAC,KAAG,CAACwD,IAAI,CAACtD,OAAO,EAC5B,CAAC,cACPd,IAAA,SAAMuF,SAAS,CAAE,8CACfnB,IAAI,CAACpB,WAAW,CACZ,6BAA6B,CAC7B,yBAAyB,EAC5B,CAAAwC,QAAA,CACApB,IAAI,CAACpB,WAAW,CAAG,WAAW,CAAG,aAAa,CAC3C,CAAC,EACJ,CAAC,cAENhD,IAAA,WACE8F,OAAO,CAAEA,CAAA,GAAMvC,gBAAgB,CAACa,IAAI,CAACY,GAAG,CAAE,CAC1CO,SAAS,CAAC,mDAAmD,CAAAC,QAAA,cAE7DxF,IAAA,CAACJ,OAAO,EAAC2F,SAAS,CAAC,SAAS,CAAE,CAAC,CACzB,CAAC,GAxBJnB,IAAI,CAACY,GAyBP,CACN,CAAC,CACC,CAAC,cAEN9E,KAAA,QAAKqF,SAAS,CAAC,gCAAgC,CAAAC,QAAA,EAAC,wBACxB,CAACxB,GAAG,EACvB,CACN,GAjEOA,GAkEL,CAAC,CAEV,CAAC,CAAC,CACC,CAAC,EACH,CAAC,cAGN9D,KAAA,QAAKqF,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC7CxF,IAAA,OAAIuF,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAC,gCAA8B,CAAI,CAAC,cAC5FtF,KAAA,OAAIqF,SAAS,CAAC,iCAAiC,CAAAC,QAAA,eAC7CxF,IAAA,OAAAwF,QAAA,CAAI,sEAA+D,CAAI,CAAC,cACxExF,IAAA,OAAAwF,QAAA,CAAI,oDAA6C,CAAI,CAAC,cACtDxF,IAAA,OAAAwF,QAAA,CAAI,8CAAuC,CAAI,CAAC,cAChDxF,IAAA,OAAAwF,QAAA,CAAI,4EAAqE,CAAI,CAAC,EAC5E,CAAC,EACF,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAArF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}